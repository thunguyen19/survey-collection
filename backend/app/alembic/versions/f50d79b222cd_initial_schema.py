"""initial schema

Revision ID: f50d79b222cd
Revises: 
Create Date: 2025-09-02 11:34:14.675620

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'f50d79b222cd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedbackresponsetype',
    sa.Column('type_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('type_category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('display_options', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type_name')
    )
    op.create_table('organization',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('subscription_tier', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('appointment',
    sa.Column('external_appointment_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('appointment_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('chief_complaint', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('visit_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('patient_id', sa.Uuid(), nullable=False),
    sa.Column('provider_id', sa.Uuid(), nullable=False),
    sa.Column('diagnosis_codes', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('diagnosis_descriptions', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surveytemplate',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('questions', sa.JSON(), nullable=True),
    sa.Column('triggers', sa.JSON(), nullable=True),
    sa.Column('delivery_settings', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedbacksession',
    sa.Column('status', sa.Enum('INITIATED', 'IN_PROGRESS', 'COMPLETED', 'EXPIRED', 'CANCELLED', name='feedbacksessionstatus'), nullable=False),
    sa.Column('delivery_method', sa.Enum('EMAIL', 'SMS', 'PHONE', 'IN_PERSON', name='deliverymethod'), nullable=True),
    sa.Column('delivery_attempts', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('appointment_id', sa.Uuid(), nullable=False),
    sa.Column('survey_template_id', sa.Uuid(), nullable=False),
    sa.Column('completion_token', sa.Uuid(), nullable=False),
    sa.Column('initiated_at', sa.DateTime(), nullable=False),
    sa.Column('first_response_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('last_delivery_attempt', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('completion_time_seconds', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointment.id'], ),
    sa.ForeignKeyConstraint(['survey_template_id'], ['surveytemplate.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('completion_token')
    )
    op.create_table('feedbackresponse',
    sa.Column('question_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('response_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('response_time_seconds', sa.Integer(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('response_type_id', sa.Uuid(), nullable=False),
    sa.Column('response_value', sa.JSON(), nullable=True),
    sa.Column('ai_analysis', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['response_type_id'], ['feedbackresponsetype.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['feedbacksession.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('feedbackresponse')
    op.drop_table('feedbacksession')
    op.drop_table('surveytemplate')
    op.drop_table('item')
    op.drop_table('appointment')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('organization')
    op.drop_table('feedbackresponsetype')
    # ### end Alembic commands ###
